-- Blade Ball

local workspace = game:GetService('Workspace');
local cc = workspace:FindFirstChild('Camera');

local abilities = {}
getgenv().bb_clashCount = 0;

if char:FindFirstChild('Abilities') then
    for i, v in pairs(char:FindFirstChild('Abilities'):GetChildren()) do
        print(v.Name)
        table.insert(abilities, v.Name)
    end
end

SaveManager:SetFolder('Polaris/' .. client.Name .. 'BladeBall')
getgenv().folderSet = true

local vim = game:GetService('VirtualInputManager');

local function RandomColor()
    local function r()
        local r = math.random(1, 255)

        return r;
    end

    return Color3.fromRGB(r(), r(), r());
end

getgenv().rainbowParry = false;

local function SetParryColor()
    if rainbowParry then
        local r, g, b = RandomColor(), RandomColor(), RandomColor()
        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("ChangeSwordColor"):FireServer(r, g, b)
    end
end

RunService.RenderStepped:Connect(SetParryColor)

function pressKey(key)
    pcall(function()
        vim:SendKeyEvent(true, Enum.KeyCode[key], false, game)
        wait()
        vim:SendKeyEvent(false, Enum.KeyCode[key], false, game)
    end)
end

function Parry()
    game:GetService("ReplicatedStorage").Remotes.ParryButtonPress:Fire()
end

function ParryAttempt()
    local PlayerArray = {};

    for i, v in pairs(game:GetService('Players'):GetPlayers()) do
        if v.UserId and v.Character then
            local id = v.UserId;
            local char = v.Character;
            local screenPos = cc:WorldToViewportPoint(char.PrimaryPart.Position);

            PlayerArray[id] = screenPos;
        end
    end

    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("ParryAttempt"):FireServer(0.5, cc.CFrame,
        PlayerArray, { 960, 480 })
end

function Clash()
    spawn(function()
        spawn(function()
            ParryAttempt()
            Parry()
        end)
    end)
end

local Main = Window:AddTab('Main');
local LSC1 = Main:AddLeftGroupbox("Auto");
local LSC2 = Main:AddLeftGroupbox("Abilities");
local RSC1 = Main:AddRightGroupbox("Visual");
local RSC2 = Main:AddRightGroupbox("Laggy");

local iced_bb = RSC2:AddButton({
    Text = 'Is this ice?',
    Func = function()
        for i = 1, 100 do
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Freeze"):FireServer()
        end
    end,
    DoubleClick = false
})

local iced_bbv2 = RSC2:AddToggle('iced_bbv2', {
    Text = 'Ultimate Defense (Freeze)',
    Default = false,

    Callback = function(Value)
        getgenv().bb_defense = Value
    end
});

local function GetBalls()
    local real;
    local fake;

    for _, v in next, (workspace.Balls:GetChildren()) do
        if (v:GetAttribute('realBall')) or (not v.Anchored) then
            real = v
        else
            fake = v
        end
    end
    return { real, fake }
end

local function GetSpeed()
    local returnValue = 0;

    local balls = GetBalls()

    local b1 = balls[1]
    local b2 = balls[2]

    if b1 and b2 and hrp then
        local speed = b1:FindFirstChild('zoomies').VectorVelocity
        local spX = string.gsub(tostring(speed.X), '-', '')
        spX = tonumber(spX)
        local spZ = string.gsub(tostring(speed.Z), '-', '')
        spZ = tonumber(spZ)
        local spY = string.gsub(tostring(speed.Y), '-', '')
        spY = tonumber(spY)

        returnValue = (spX + spZ + (spY / 2));
    end

    if returnValue == 0 then
        return 0;
    else
        return math.clamp(returnValue / 3, 15, 125);
    end
end

local function GetBallDis(targetPart)
    local targetPart = targetPart or hrp
    local returnValue = 0;

    local balls = GetBalls()

    local b1 = balls[1]
    local b2 = balls[2]

    local speed = GetSpeed()

    if b1 and b2 and targetPart and speed then
        returnValue = (b2.Position - targetPart.Position).magnitude
    end

    return returnValue;
end

local function GetTarget()
    local returnValue;

    local balls = GetBalls()

    local b1 = balls[1]
    local b2 = balls[2]

    if b1 and b2 and hrp then
        returnValue = b1:GetAttribute('target');
    end

    return returnValue;
end

local function IsTarget()
    if GetTarget() == client.Name then
        return true;
    else
        return false;
    end
end

local Part;

local function GetClashColor()
    local clash = bb_clashCount
    local color = Color3.new(1, 1, 1)
    if clash <= 1 then
        color = Color3.new(1, 1, 1);
    elseif clash == 2 then
        color = Color3.new(1, .5, .5)
    elseif clash >= 3 then
        color = Color3.new(1, 0, 0)
    end

    return color;
end

local visualizeRange = RSC1:AddToggle('visualizeRange', {
    Text = 'Visualize Parry Range',
    Default = false,

    Callback = function(Value)
        getgenv().visualizeRange = Value

        if visualizeRange then
            Part = Instance.new('Part')
            Part.Parent = workspace
            Part.Shape = Enum.PartType.Ball
            Part.Material = Enum.Material.ForceField
            Part.Transparency = .2
            spawn(function()
                local connection;

                connection = RunService.RenderStepped:Connect(function()
                    if visualizeRange then
                        if hrp and GetBalls()[1] then
                            Part.CFrame = hrp.CFrame;
                            Part.CanCollide = false;
                            Part.CastShadow = false;
                            if s == 0 then
                                s = 0;
                            else
                                s = math.clamp(GetSpeed(), 25, math.huge);
                            end

                            game:GetService('TweenService'):Create(Part,
                                TweenInfo.new(.1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut),
                                { Size = Vector3.new(s, s, s) }):Play();

                            local color = GetClashColor()

                            if color then
                                game:GetService('TweenService'):Create(Part,
                                    TweenInfo.new(.2, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut),
                                    { Color = color })
                                    :Play();
                            end
                        end
                    else
                        connection:Disconnect()
                        if Part then
                            Part:Destroy()
                        end
                    end
                end)
            end)
        else
            if Part then
                Part:Destroy()
            end
        end
    end
});

RSC1:AddDivider()

local rainbowParry = RSC1:AddToggle('rainbowParry', {
    Text = 'Rainbow Block Color',
    Tooltip = 'Server-Sided',
    Default = false,

    Callback = function(Value)
        getgenv().rainbowParry = Value;
    end
});


local TargetChanged = false;

local autoParry = LSC1:AddToggle('autoParry', {
    Text = 'Auto Parry',
    Default = false,

    Callback = function(Value)
        getgenv().bb_AutoParry = Value

        while bb_AutoParry do
            Heartbeat:Wait()

            if IsTarget() then
                local dis = GetBallDis()
                local maxDis = GetSpeed()

                if dis <= maxDis then
                    ParryAttempt()
                    local oldTick = tick();
                    local newTick = tick();

                    spawn(function()
                        if previousTarget then
                            local dis = (previousTarget:GetModelCFrame().Position - hrp.Position).magnitude
                            local added = 1;

                            if dis <= 25 then
                                bb_clashCount = bb_clashCount + 3;
                                added = 3;
                            elseif dis <= 50 then
                                bb_clashCount = bb_clashCount + 1;
                                added = 1;
                            end

                            spawn(function()
                                wait(.75);
                                bb_clashCount = bb_clashCount - added;
                            end)
                        end
                    end)

                    repeat
                        Heartbeat:Wait()
                        newTick = tick()
                    until not IsTarget() or (oldTick - newTick >= 1 / 60)
                end
            else
                if GetTarget() and game:GetService('Players'):FindFirstChild(GetTarget()) then
                    getgenv().previousTarget = game:GetService('Players'):FindFirstChild(GetTarget()).Character
                end
            end
        end
    end
});

LSC1:AddDivider()

local autoClash = LSC1:AddToggle('autoClash', {
    Text = 'Auto Clash',
    Default = false,

    Callback = function(Value)
        getgenv().bb_autoClash = Value

        while bb_autoClash do
            Heartbeat:Wait()
            spawn(function()
                if bb_clashCount >= 3 then
                    Clash()
                end
            end)
        end
    end
});

local manualClash = LSC1:AddToggle('manualClash', {
    Text = 'Manual Clash (HOLD E)',
    Default = false,

    Callback = function(Value)
        getgenv().bb_manualClash = Value
    end
});

task.spawn(function()
    local uis = game:GetService('UserInputService');
    local IsHolding = false;

    uis.InputBegan:Connect(function(input, IsTyping)
        if not IsTyping and input.KeyCode == Enum.KeyCode.E then
            IsHolding = true;

            while IsHolding and bb_manualClash do
                Heartbeat:Wait()
                spawn(function()
                    Clash()
                end)
            end
        end
    end)

    uis.InputEnded:Connect(function(input, IsTyping)
        if not IsTyping and input.KeyCode == Enum.KeyCode.E then
            IsHolding = false;
        end
    end)
end)

LSC2:AddLabel('|| Equip Correct Ability ||')

local autoPull = LSC2:AddToggle('autoPull', {
    Text = 'Auto Pull',
    Default = false,

    Callback = function(Value)
        getgenv().bb_autoPull = Value

        while bb_autoPull do
            Heartbeat:Wait()

            if GetTarget() and not IsTarget() and game:GetService('Players'):FindFirstChild(GetTarget()) then
                local target = game:GetService('Players'):FindFirstChild(GetTarget()).Character
                local dis = (target:GetModelCFrame().Position - hrp.Position).Magnitude

                if dis <= 50 then
                    game:GetService("ReplicatedStorage").Remotes.AbilityButtonPress:Fire()
                end
            end
        end
    end
});
