-- Blade Ball

local abilities = {}

if char:FindFirstChild('Abilities') then
    for i, v in pairs(char:FindFirstChild('Abilities'):GetChildren()) do
        print(v.Name)
        table.insert(abilities, v.Name)
    end
end

SaveManager:SetFolder('Polaris/' .. client.Name .. 'BladeBall')
getgenv().folderSet = true

local vim = game:GetService('VirtualInputManager');

function pressKey(key)
    pcall(function()
        vim:SendKeyEvent(true, Enum.KeyCode[key], false, game)
        wait()
        vim:SendKeyEvent(false, Enum.KeyCode[key], false, game)
    end)
end

function Parry()
    game:GetService("ReplicatedStorage").Remotes.ParryButtonPress:Fire()
end

function ParryAttempt()
    local args = {
        [1] = .5,
        [2] = hrp.CFrame,
        [3] = {
        },
        [4] = {
            [1] = 0,
            [2] = 0
        }
    }

    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("ParryAttempt"):FireServer(unpack(args))
end

function Clash()
    spawn(function()
        for i = 1, 5 do
            spawn(function()
                Parry()
                ParryAttempt()
                pressKey('F')
            end)
        end
    end)
end

local Main = Window:AddTab('Main');
local LSC1 = Main:AddLeftGroupbox("Auto");
local RSC1 = Main:AddRightGroupbox("Visual");
local RSC2 = Main:AddRightGroupbox("Laggy");

local iced_bb = RSC2:AddButton({
    Text = 'Is this ice?',
    Func = function()
        for i = 1, 100 do
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Freeze"):FireServer()
        end
    end,
    DoubleClick = false
})

local iced_bbv2 = RSC2:AddToggle('iced_bbv2', {
    Text = 'Ultimate Defense (Freeze)',
    Default = false,

    Callback = function(Value)
        getgenv().bb_defense = Value
    end
});

local function GetBalls()
    local real;
    local fake;

    for _, v in pairs(workspace.Balls:GetChildren()) do
        if v:GetAttribute('realBall') or (v:GetAttribute('target') and v:GetAttribute('target') ~= '') then
            real = v
        else
            fake = v
        end
    end
    return { real, fake }
end

local function GetSpeed()
    local returnValue = 0;

    local balls = GetBalls()

    local b1 = balls[1]
    local b2 = balls[2]

    if b1 and b2 and hrp then
        local speed = b2:FindFirstChild('zoomies').VectorVelocity
        local spX = string.gsub(tostring(speed.X), '-', '')
        spX = tonumber(spX)
        local spZ = string.gsub(tostring(speed.Z), '-', '')
        spZ = tonumber(spZ)
        local spY = string.gsub(tostring(speed.Y), '-', '')
        spY = tonumber(spY)

        returnValue = (spX + spZ + (spY / 2));
    end

    return returnValue;
end

local function GetParryDis()
    local returnValue = 0;

    local balls = GetBalls()

    local b1 = balls[1]
    local b2 = balls[2]

    local speed = GetSpeed() / 2.36

    if b1 and b2 and hrp and speed then
        returnValue = (b1.Position - hrp.Position).magnitude
    end

    return returnValue;
end

local function GetTarget()
    local returnValue;

    local balls = GetBalls()

    local b1 = balls[1]
    local b2 = balls[2]

    if b1 and b2 and hrp then
        returnValue = b2:GetAttribute('target');
    end

    return returnValue;
end

local Part;
getgenv().clashCounter = 1;


local visualizeRange = RSC1:AddToggle('visualizeRange', {
    Text = 'Visualize Parry Range',
    Default = false,

    Callback = function(Value)
        getgenv().visualizeRange = Value

        if visualizeRange then
            Part = Instance.new('Part')
            Part.Parent = workspace
            Part.Shape = Enum.PartType.Ball
            Part.Material = Enum.Material.ForceField
            Part.Transparency = .2
            spawn(function()
                local connection;

                connection = RunService.RenderStepped:Connect(function()
                    if visualizeRange then
                        if hrp and GetBalls()[1] then
                            local clash = clashCounter or 1;

                            if bb_autoClash then
                                Part.Color = Color3.new(1, 1 / clash, 1 / clash)
                            else
                                Part.Color = Color3.new(1, 1, 1)
                            end
                        end
                    else
                        connection:Disconnect()
                    end
                end)
            end)
        end
    end
});

local TargetChanged = false;

local autoParry = LSC1:AddToggle('autoParry', {
    Text = 'Auto Parry',
    Default = false,

    Callback = function(Value)
        getgenv().bb_AutoParry = Value

        while bb_AutoParry do
            Heartbeat:Wait()

            local balls = GetBalls()
            local parryDis = GetSpeed() / 2.36
            local target = GetTarget()
            local name = client.Name

            if target == name then
                spawn(function()
                    if not TargetChanged then
                        TargetChanged = true;

                        if dis <= (parryDis * .75) then
                            clashCounter = clashCounter - .2
                            task.wait(.5)
                            clashCounter = clashCounter + .2
                        end
                    end
                end)

                spawn(function()
                    if clashCounter <= .4 then
                        Clash()
                    end
                end)

                local dis = GetParryDis()

                if dis <= parryDis then
                    ParryAttempt()
                end
            else
                TargetChanged = false;
            end
        end
    end
});

LSC1:AddDivider()

local autoClash = LSC1:AddToggle('autoClash', {
    Text = 'Auto Clash',
    Default = false,

    Callback = function(Value)
        getgenv().bb_autoClash = Value
    end
});
